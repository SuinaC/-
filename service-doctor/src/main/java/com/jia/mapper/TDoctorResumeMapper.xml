<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jia.mapper.TDoctorResumeMapper" >
  <resultMap id="BaseResultMap" type="com.jia.entity.TDoctorResume" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="doctor_id" property="doctorId" jdbcType="BIGINT" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="education_time" property="educationTime" jdbcType="VARCHAR" />
    <result column="work_experience" property="workExperience" jdbcType="VARCHAR" />
    <result column="work_experience_time" property="workExperienceTime" jdbcType="VARCHAR" />
    <result column="awards" property="awards" jdbcType="VARCHAR" />
    <result column="awards_time" property="awardsTime" jdbcType="VARCHAR" />
    <result column="service" property="service" jdbcType="VARCHAR" />
    <result column="specializations" property="specializations" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMap" type="com.jia.entity.TDoctorResume" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="doctor_id" property="doctorId" jdbcType="BIGINT" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="education_time" property="educationTime" jdbcType="VARCHAR" />
    <result column="work_experience" property="workExperience" jdbcType="VARCHAR" />
    <result column="work_experience_time" property="workExperienceTime" jdbcType="VARCHAR" />
    <result column="awards" property="awards" jdbcType="VARCHAR" />
    <result column="awards_time" property="awardsTime" jdbcType="VARCHAR" />
    <result column="service" property="service" jdbcType="VARCHAR" />
    <result column="specializations" property="specializations" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <collection property="tDoctor" ofType="com.jia.entity.TDoctor" javaType="com.jia.entity.TDoctor">
      <id column="d_id" property="id" jdbcType="BIGINT"/>
      <result column="d_name" property="name" jdbcType="VARCHAR"/>
      <result column="d_department" property="department" jdbcType="VARCHAR"/>
      <result column="d_title" property="title" jdbcType="VARCHAR"/>
      <result column="d_address" property="address" jdbcType="VARCHAR"/>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, doctor_id, education, education_time, work_experience, work_experience_time, 
    awards, awards_time, service, specializations,gmt_create,gmt_modified
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jia.entity.TDoctorResumeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_doctor_resume
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByDoctorId" resultMap="ResultMap" parameterType="java.lang.Long">
    select *
    from t_doctor,t_doctor_resume
    where t_doctor.id = t_doctor_resume.doctor_id and t_doctor.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByExample" parameterType="com.jia.entity.TDoctorResumeExample" >
    delete from t_doctor_resume
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jia.entity.TDoctorResume" >
    insert into t_doctor_resume (id, doctor_id, education, 
      education_time, work_experience, work_experience_time, 
      awards, awards_time, service, 
      specializations,gmt_create,gmt_modified)
    values (#{id,jdbcType=BIGINT}, #{doctorId,jdbcType=BIGINT}, #{education,jdbcType=VARCHAR}, 
      #{educationTime,jdbcType=VARCHAR}, #{workExperience,jdbcType=VARCHAR}, #{workExperienceTime,jdbcType=VARCHAR}, 
      #{awards,jdbcType=VARCHAR}, #{awardsTime,jdbcType=VARCHAR}, #{service,jdbcType=VARCHAR}, 
      #{specializations,jdbcType=VARCHAR},#{gmtCreate,jdbcType=TIMESTAMP},#{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jia.entity.TDoctorResume" >
    insert into t_doctor_resume
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="doctorId != null" >
        doctor_id,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="educationTime != null" >
        education_time,
      </if>
      <if test="workExperience != null" >
        work_experience,
      </if>
      <if test="workExperienceTime != null" >
        work_experience_time,
      </if>
      <if test="awards != null" >
        awards,
      </if>
      <if test="awardsTime != null" >
        awards_time,
      </if>
      <if test="service != null" >
        service,
      </if>
      <if test="specializations != null" >
        specializations,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null" >
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="educationTime != null" >
        #{educationTime,jdbcType=VARCHAR},
      </if>
      <if test="workExperience != null" >
        #{workExperience,jdbcType=VARCHAR},
      </if>
      <if test="workExperienceTime != null" >
        #{workExperienceTime,jdbcType=VARCHAR},
      </if>
      <if test="awards != null" >
        #{awards,jdbcType=VARCHAR},
      </if>
      <if test="awardsTime != null" >
        #{awardsTime,jdbcType=VARCHAR},
      </if>
      <if test="service != null" >
        #{service,jdbcType=VARCHAR},
      </if>
      <if test="specializations != null" >
        #{specializations,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jia.entity.TDoctorResumeExample" resultType="java.lang.Integer" >
    select count(*) from t_doctor_resume
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_doctor_resume
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.doctorId != null" >
        doctor_id = #{record.doctorId,jdbcType=BIGINT},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.educationTime != null" >
        education_time = #{record.educationTime,jdbcType=VARCHAR},
      </if>
      <if test="record.workExperience != null" >
        work_experience = #{record.workExperience,jdbcType=VARCHAR},
      </if>
      <if test="record.workExperienceTime != null" >
        work_experience_time = #{record.workExperienceTime,jdbcType=VARCHAR},
      </if>
      <if test="record.awards != null" >
        awards = #{record.awards,jdbcType=VARCHAR},
      </if>
      <if test="record.awardsTime != null" >
        awards_time = #{record.awardsTime,jdbcType=VARCHAR},
      </if>
      <if test="record.service != null" >
        service = #{record.service,jdbcType=VARCHAR},
      </if>
      <if test="record.specializations != null" >
        specializations = #{record.specializations,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_doctor_resume
    set id = #{record.id,jdbcType=BIGINT},
      doctor_id = #{record.doctorId,jdbcType=BIGINT},
      education = #{record.education,jdbcType=VARCHAR},
      education_time = #{record.educationTime,jdbcType=VARCHAR},
      work_experience = #{record.workExperience,jdbcType=VARCHAR},
      work_experience_time = #{record.workExperienceTime,jdbcType=VARCHAR},
      awards = #{record.awards,jdbcType=VARCHAR},
      awards_time = #{record.awardsTime,jdbcType=VARCHAR},
      service = #{record.service,jdbcType=VARCHAR},
      specializations = #{record.specializations,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>